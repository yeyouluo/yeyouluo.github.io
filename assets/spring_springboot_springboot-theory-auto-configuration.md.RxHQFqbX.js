import{_ as t,c as a,o as i,ag as n}from"./chunks/framework.BZemHgQ6.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"spring/springboot/springboot-theory-auto-configuration.md","filePath":"spring/springboot/springboot-theory-auto-configuration.md","lastUpdated":1733328144000}'),r={name:"spring/springboot/springboot-theory-auto-configuration.md"};function e(p,o,s,l,c,g){return i(),a("div",null,o[0]||(o[0]=[n('<nav class="table-of-contents"><ul><li><a href="#引言">引言</a></li><li><a href="#springbootapplication-注解">@SpringBootApplication 注解</a></li></ul></nav><h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h2><p>Spring Boot 中的配置体系是一套强大而复杂的体系，其中最基础、最核心的要数自动配置（AutoConfiguration）机制了。</p><h2 id="springbootapplication-注解" tabindex="-1">@SpringBootApplication 注解 <a class="header-anchor" href="#springbootapplication-注解" aria-label="Permalink to &quot;@SpringBootApplication 注解&quot;">​</a></h2>',4)]))}const d=t(r,[["render",e]]);export{_ as __pageData,d as default};
