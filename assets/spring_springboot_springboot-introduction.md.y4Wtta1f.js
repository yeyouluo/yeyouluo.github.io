import{_ as t,c as i,o as r,ag as n}from"./chunks/framework.BZemHgQ6.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"spring/springboot/springboot-introduction.md","filePath":"spring/springboot/springboot-introduction.md","lastUpdated":1733328144000}'),a={name:"spring/springboot/springboot-introduction.md"};function p(e,o,s,l,g,c){return r(),i("div",null,o[0]||(o[0]=[n('<nav class="table-of-contents"><ul><li><a href="#springboot的特点">SpringBoot的特点</a></li><li><a href="#springboot的核心功能">SpringBoot的核心功能</a></li></ul></nav><h2 id="springboot的特点" tabindex="-1">SpringBoot的特点 <a class="header-anchor" href="#springboot的特点" aria-label="Permalink to &quot;SpringBoot的特点&quot;">​</a></h2><ol><li>为基于Spring的开发提供更快的入门体验</li><li>开箱即用，没有代码生成，也无需XML配置。同时也可以修改默认值来满足特定的需求</li><li>提供了一些大型项目中常见的非功能性特性，如嵌入式服务器、安全、指标，健康检测、外部配置等</li></ol><p>SpringBoot不是对Spring功能上的增强，而是提供了一种快速使用Spring的方式。</p><h2 id="springboot的核心功能" tabindex="-1">SpringBoot的核心功能 <a class="header-anchor" href="#springboot的核心功能" aria-label="Permalink to &quot;SpringBoot的核心功能&quot;">​</a></h2><ul><li><p><strong>起步依赖</strong></p><p>起步依赖本质上是一个Maven项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖，这些东西加在一起即支持某项功能。</p><p>简单的说，起步依赖就是将具备某种功能的坐标打包到一起，并提供一些默认的功能。</p></li><li><p><strong>自动配置</strong></p><p>Spring Boot的自动配置是一个运行时（更准确地说，是应用程序启动时）的过程，考虑了众多因素，才决定Spring配置应该用哪个，不该用哪个。该过程是Spring自动完成的。</p></li></ul>',6)]))}const b=t(a,[["render",p]]);export{_ as __pageData,b as default};
